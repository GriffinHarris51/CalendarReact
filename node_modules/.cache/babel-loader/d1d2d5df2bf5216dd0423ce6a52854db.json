{"ast":null,"code":"var _jsxFileName = \"/Users/bigstacksjerry/code/20-react-apps/calendar-picker/start/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nconst calendarDates = Array(31).fill(0).map((e, i) => i);\nexport default function App() {\n  const [choosingType, setChoosingType] = useState('start');\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  function updateDate(chosenDay) {\n    if (choosingType === 'start') {\n      setStartDate(chosenDay);\n      setChoosingType('end');\n    }\n\n    if (choosingType === 'end') {\n      setEndDate(chosenDay);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-chooser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"date-chooser-button\",\n    onClick: () => setChoosingType('start'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Start Date \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  }, startDate)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"date-chooser-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"End Date \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }\n  }, endDate))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, calendarDates.map((day, index) => {\n    const dayNumber = day + 1;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      className: \"calendar-day\",\n      onClick: () => updateDate(dayNumber),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, dayNumber);\n  })));\n}","map":{"version":3,"sources":["/Users/bigstacksjerry/code/20-react-apps/calendar-picker/start/src/App.js"],"names":["React","useState","calendarDates","Array","fill","map","e","i","App","choosingType","setChoosingType","startDate","setStartDate","endDate","setEndDate","updateDate","chosenDay","day","index","dayNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AAEA,MAAMC,aAAa,GAAGC,KAAK,CAAC,EAAD,CAAL,CACnBC,IADmB,CACd,CADc,EAEnBC,GAFmB,CAEf,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAFK,CAAtB;AAIA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,OAAD,CAAhD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASc,UAAT,CAAoBC,SAApB,EAA+B;AAC7B,QAAIP,YAAY,KAAK,OAArB,EAA8B;AAC5BG,MAAAA,YAAY,CAACI,SAAD,CAAZ;AACAN,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AACD,QAAID,YAAY,KAAK,KAArB,EAA4B;AAC1BK,MAAAA,UAAU,CAACE,SAAD,CAAV;AACD;AACF;;AAED,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,qBADZ;AAEE,IAAA,OAAO,EAAE,MAAMN,eAAe,CAAC,OAAD,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAIa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,SAAP,CAJb,CADF,eAOE;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,OAAP,CADX,CAPF,CADF,eAaE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,aAAa,CAACG,GAAd,CAAkB,CAACY,GAAD,EAAMC,KAAN,KAAgB;AACjC,UAAMC,SAAS,GAAGF,GAAG,GAAG,CAAxB;AACA,wBACE;AACE,MAAA,GAAG,EAAEC,KADP;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,OAAO,EAAE,MAAMH,UAAU,CAACI,SAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,SALH,CADF;AASD,GAXA,CADH,CAbF,CADF;AA8BD","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst calendarDates = Array(31)\n  .fill(0)\n  .map((e, i) => i);\n\nexport default function App() {\n  const [choosingType, setChoosingType] = useState('start');\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  function updateDate(chosenDay) {\n    if (choosingType === 'start') {\n      setStartDate(chosenDay);\n      setChoosingType('end');\n    }\n    if (choosingType === 'end') {\n      setEndDate(chosenDay);\n    }\n  }\n\n  return (\n    <>\n      <div className='date-chooser'>\n        <button\n          className='date-chooser-button'\n          onClick={() => setChoosingType('start')}\n        >\n          Start Date <span>{startDate}</span>\n        </button>\n        <button className='date-chooser-button'>\n          End Date <span>{endDate}</span>\n        </button>\n      </div>\n\n      <div className='calendar'>\n        {calendarDates.map((day, index) => {\n          const dayNumber = day + 1;\n          return (\n            <button\n              key={index}\n              className='calendar-day'\n              onClick={() => updateDate(dayNumber)}\n            >\n              {dayNumber}\n            </button>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}