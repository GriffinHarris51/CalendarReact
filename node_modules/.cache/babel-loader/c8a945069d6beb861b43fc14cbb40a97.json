{"ast":null,"code":"var _jsxFileName = \"/Users/bigstacksjerry/code/20-react-apps/calendar-picker/start/src/App.js\";\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport './App.css';\nconst calendarDates = Array(31).fill(0).map((e, i) => i);\nexport default function App() {\n  const [choosingType, setChoosingType] = useState('start');\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  function updateDate(chosenDay) {\n    if (startDate && chosenDay < startDate) {\n      setStartDate(chosenDay);\n      return setChoosingType('end');\n    }\n\n    if (endDate && chosenDay > endDate) {\n      setEndDate(chosenDay);\n      return setChoosingType('end');\n    }\n\n    if (choosingType === 'start') {\n      setStartDate(chosenDay);\n      return setChoosingType('end');\n    }\n\n    if (choosingType === 'end') {\n      setEndDate(chosenDay);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledDateChooser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledDateChooserButton, {\n    onClick: () => setChoosingType('start'),\n    isChoosing: choosingType === 'start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Start Date \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }\n  }, startDate)), /*#__PURE__*/React.createElement(StyledDateChooserButton, {\n    onClick: () => setChoosingType('end'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"End Date \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }\n  }, endDate))), /*#__PURE__*/React.createElement(StyledCalendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, calendarDates.map((day, index) => {\n    const dayNumber = day + 1;\n    let isSelected = dayNumber === startDate || dayNumber === endDate;\n    return /*#__PURE__*/React.createElement(StyledCalendarDay, {\n      key: index,\n      isSelected: isSelected,\n      onClick: () => updateDate(dayNumber),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, dayNumber);\n  })));\n}\nconst StyledDateChooser = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\nconst StyledDateChooserButton = styled.button`\n  color: #0b204c;\n  text-transform: uppercase;\n  flex: 1;\n  padding: 15px;\n  background: none;\n  cursor: pointer;\n  border: none;\n  border-bottom: 2px solid rgba(11, 32, 76, 0.2);\n  outline: none;\n\n  span {\n    display: block;\n    min-height: 60px;\n    font-size: 50px;\n  }\n`;\nconst StyledCalendar = styled.div`\n  max-width: 400px;\n  border-radius: 10px;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),\n    0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  background: #0b204c;\n  color: #fff;\n  padding: 20px;\n`;\nconst StyledCalendarDay = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  transition: 0.3s ease background;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  color: #8096c1;\n  background: none;\n\n  ${props => props.isSelected && css`\n      background: #1a1a1a;\n      color: #eee;\n    `}\n`;","map":{"version":3,"sources":["/Users/bigstacksjerry/code/20-react-apps/calendar-picker/start/src/App.js"],"names":["React","useState","styled","css","calendarDates","Array","fill","map","e","i","App","choosingType","setChoosingType","startDate","setStartDate","endDate","setEndDate","updateDate","chosenDay","day","index","dayNumber","isSelected","StyledDateChooser","div","StyledDateChooserButton","button","StyledCalendar","StyledCalendarDay","props"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport './App.css';\n\nconst calendarDates = Array(31)\n  .fill(0)\n  .map((e, i) => i);\n\nexport default function App() {\n  const [choosingType, setChoosingType] = useState('start');\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  function updateDate(chosenDay) {\n    if (startDate && chosenDay < startDate) {\n      setStartDate(chosenDay);\n      return setChoosingType('end');\n    }\n\n    if (endDate && chosenDay > endDate) {\n      setEndDate(chosenDay);\n      return setChoosingType('end');\n    }\n\n    if (choosingType === 'start') {\n      setStartDate(chosenDay);\n      return setChoosingType('end');\n    }\n    if (choosingType === 'end') {\n      setEndDate(chosenDay);\n    }\n  }\n\n  return (\n    <>\n      <StyledDateChooser>\n        <StyledDateChooserButton\n          onClick={() => setChoosingType('start')}\n          isChoosing={choosingType === 'start'}\n        >\n          Start Date <span>{startDate}</span>\n        </StyledDateChooserButton>\n        <StyledDateChooserButton onClick={() => setChoosingType('end')}>\n          End Date <span>{endDate}</span>\n        </StyledDateChooserButton>\n      </StyledDateChooser>\n\n      <StyledCalendar>\n        {calendarDates.map((day, index) => {\n          const dayNumber = day + 1;\n\n          let isSelected = dayNumber === startDate || dayNumber === endDate;\n\n          return (\n            <StyledCalendarDay\n              key={index}\n              isSelected={isSelected}\n              onClick={() => updateDate(dayNumber)}\n            >\n              {dayNumber}\n            </StyledCalendarDay>\n          );\n        })}\n      </StyledCalendar>\n    </>\n  );\n}\n\nconst StyledDateChooser = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nconst StyledDateChooserButton = styled.button`\n  color: #0b204c;\n  text-transform: uppercase;\n  flex: 1;\n  padding: 15px;\n  background: none;\n  cursor: pointer;\n  border: none;\n  border-bottom: 2px solid rgba(11, 32, 76, 0.2);\n  outline: none;\n\n  span {\n    display: block;\n    min-height: 60px;\n    font-size: 50px;\n  }\n`;\n\nconst StyledCalendar = styled.div`\n  max-width: 400px;\n  border-radius: 10px;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),\n    0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  background: #0b204c;\n  color: #fff;\n  padding: 20px;\n`;\n\nconst StyledCalendarDay = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  transition: 0.3s ease background;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  color: #8096c1;\n  background: none;\n\n  ${(props) =>\n    props.isSelected &&\n    css`\n      background: #1a1a1a;\n      color: #eee;\n    `}\n`;\n"]},"metadata":{},"sourceType":"module"}